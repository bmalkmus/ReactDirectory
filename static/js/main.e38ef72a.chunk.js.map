{"version":3,"sources":["components/Title/Shield.png","components/EmployeeCard/index.js","components/Title/index.js","components/Wrapper/index.js","components/Container/index.js","components/Table/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","EmployeeCard","props","className","alt","hero","src","image","name","strength","type","onClick","debrief","id","Title","logo","children","Wrapper","Container","Table","sortID","console","log","setState","a","b","sortName","sortBy","localeCompare","sortStrength","sortAlias","state","data","this","filter","employee","active","sort","map","key","Activate","Component","App","employees","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e38ef72a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Shield.1f4b4eb5.png\";","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction EmployeeCard(props) {\r\n\r\n    return (\r\n        <div className = \"card\">\r\n            <div className = \"img-container\">\r\n                <img className = \"card-img\"\r\n                    alt = {props.hero} \r\n                    src={props.image}\r\n                />\r\n            </div>\r\n            <div className =\"card-body\">\r\n                <h4 className = \"card-title\">\r\n                     {props.hero} \r\n                </h4>\r\n                <p className = \"card-text card-name\">\r\n                    Name: {props.name} \r\n                </p>\r\n                <p className = \"card-text card-strength\">\r\n                    Strength: {props.strength} \r\n                </p>\r\n                <button \r\n                    className = \"dbBTN lgBTN\"\r\n                    type =\"button\"\r\n                    onClick ={() => props.debrief(props.id)}\r\n                    \r\n                    >Debrief Mission</button>\r\n                <button \r\n                    className = \"dbBTN smBTN\"\r\n                    type =\"button\"\r\n                    onClick ={() => props.debrief(props.id)}\r\n                    \r\n                    >Debrief</button>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EmployeeCard","import React from \"react\";\r\nimport \"./style.css\";\r\nimport logo from \"./Shield.png\"\r\n\r\nfunction Title(props) {\r\n    return (\r\n        <div className = \"title\">\r\n        <h1 className = \"title-text\">\r\n            <img src ={logo} className =\"logo lg1\" alt = \"logo\"/>  {props.children}  <img src ={logo} className =\"logo lg2\" alt = \"logo\"/>\r\n        </h1>\r\n        </div>\r\n\r\n       \r\n    )}\r\n\r\nexport default Title;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props){\r\n    return <div className = \"Wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Container(props){\r\n    return <div className = \"container card-column teamContent\">{props.children}</div>;\r\n}\r\n\r\nexport default Container ","import React, {Component} from \"react\";\nimport \"./style.css\";\n\n\n\nclass Table extends Component {\n\n    sortID = () => {\n        console.log(\"click\");\n        this.setState((a, b) => a.id - b.id)\n    }\n\n    sortName = () => {\n        this.setState({sortBy: (a, b) => a.name.localeCompare(b.name)})\n    }\n\n    sortStrength = () => {\n        this.setState({sortBy: (a, b) => a.strength.localeCompare(b.strength)})\n    }\n\n    sortAlias = () => {\n        this.setState( {sortBy: (a, b) => a.hero.localeCompare(b.hero)})\n    }\n\n     state =  {\n        sortBy: (a, b) => a.id - b.id\n    };\n    \n render(){\n     const {data} = this.props;\n     return (\n        <div className =\"table-responsive\">\n<br></br>;\n<br></br>;\n<table className = \"table inactiveTab\">\n    <thead>\n        <tr>\n            <th onClick ={() => this.setState({sortBy: (a, b) => a.id - b.id })}>Hero I.D.</th>\n            <th onClick ={() => this.setState( {sortBy: (a, b) => a.hero.localeCompare(b.hero)})}>Alias</th>\n            <th onClick ={() => this.setState( {sortBy: (a, b) => a.name.localeCompare(b.name)})}>Name</th>\n            <th onClick ={() => this.setState( {sortBy: (a, b) => a.strength.localeCompare(b.strength)})}>Strength</th>\n            <th className =\"btnCell\">Send to Mission</th>\n        </tr>\n    </thead>\n    <tbody>\n        {[...data].filter(employee => employee.active === false).sort(this.state.sortBy).map(employee => (\n         <tr key = {employee.id} id ={employee.id}>\n         <td>{employee.id}</td>\n         <td>{employee.hero}</td>\n         <td>{employee.name}</td>\n         <td>{employee.strength}</td>\n         <td className= \"btnCell\">\n             <button \n                 type = \"button\" \n                 className = \"BTN\" \n                 id = {employee.id}\n                 onClick ={() => this.props.Activate(employee.id)}\n \n             >Activate Mission</button> \n         </td>\n         </tr>\n          ))}\n    </tbody>\n                   </table>\n            </div>\n     )\n }\n}\nexport default Table;\n","import React, { Component } from 'react';\nimport './App.css';\nimport employees from \"./employees.json\";\nimport EmployeeCard from \"./components/EmployeeCard\";\nimport Title from \"./components/Title\";\nimport Wrapper from \"./components/Wrapper\";\nimport Container from \"./components/Container\"\nimport Table from \"./components/Table\"\n\nclass App extends Component {\nstate = {\n  employees\n}\n\nActivate = id =>  {\n   let employees = this.state.employees;\n   employees[id-1].active = true;\n   console.log(employees[id-1]);\n     this.setState({employees});\n   }\n\ndebrief = id => {\n  let employees = this.state.employees;\n  employees[id-1].active = false;\n  console.log(employees[id-1]);\n    this.setState({employees});\n}\n\n\n\nrender(){\n  return (\n    <Wrapper>\n      <Title>Avengers Employee Directory</Title>\n      <Container>\n\n        {this.state.employees.filter(employee => employee.active === true).map(employee => (\n          <EmployeeCard\n            debrief = {this.debrief} \n            id ={employee.id}\n            key = {employee.id}\n            hero = {employee.hero}\n            name = {employee.name}\n            image = {employee.image}\n            strength = {employee.strength}\n          />\n        ))}\n      </Container>\n      <Table data ={this.state.employees} Activate= {this.Activate}/>\n    </Wrapper>\n  )\n}\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}